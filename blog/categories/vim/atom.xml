<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vim | post <$> shiroyama <*> blog]]></title>
  <link href="http://blog.shiroyama.us/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://blog.shiroyama.us/"/>
  <updated>2016-01-26T12:16:16+09:00</updated>
  <id>http://blog.shiroyama.us/</id>
  <author>
    <name><![CDATA[Fumihiko Shiroyama]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[VimでMarkdownのリンク書くときに便利なﾌﾟﾗｷﾞﾝ]]></title>
    <link href="http://blog.shiroyama.us/blog/2015/03/21/vim-operator-mdurl/"/>
    <updated>2015-03-21T23:06:12+09:00</updated>
    <id>http://blog.shiroyama.us/blog/2015/03/21/vim-operator-mdurl</id>
    <content type="html"><![CDATA[<p>このブログは <a href="http://octopress.org/" title="Octopress">Octopress</a> 使ってるのでMarkdownで書いてるんだけどMarkdownのリンク書くのドイメンじゃないですか。そういうひとは <a href="https://github.com/vimtaku/vim-operator-mdurl" title="vimtaku/vim-operator-mdurl">vimtaku/vim-operator-mdurl</a> 使うといいですよ。</p>

<p>とりあえず <code>NeoBundle 'vimtaku/vim-operator-mdurl'</code> して入れてください。</p>

<h4>使い方</h4>

<p>初期状態で <code>L</code> と <code>M</code> がマップされてます。バッティングしてる人はうまいこと変えてください。</p>

<h5>1) Lの方</h5>

<p><code>http://mana.bo/</code> みたいなテキストがあったらここで <code>LiW</code> とかすると <code>[http://mana.bo/](http://mana.bo/)</code> になります。<code>mattn/vim-textobj-url</code> とか入れてる人は <code>Liu</code> の方が自然ですね。</p>

<h5>2) Mの方</h5>

<p><code>http://mana.bo/</code> みたいなURLがヤンクされた状態で <code>株式会社マナボ</code> みたいなテキストの上で <code>MiW</code> とかすると <code>[株式会社マナボ](http://mana.bo/ "株式会社マナボ")</code> になります。最高クールじゃないすか。</p>

<p>Vim は世界で最も優れたテキストエディタなんでみなさん積極的に使いましょう。それでは。</p>

<p>参考リンク：<a href="http://vimtaku.github.io/blog/2014/03/08/vim-operator-mdurl/" title="Vim-operator-mdurl という Vim Plugin 書いた">Vim-operator-mdurl という Vim Plugin 書いた</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Lisper必携 paredit.vim]]></title>
    <link href="http://blog.shiroyama.us/blog/2015/03/17/paredit-vim/"/>
    <updated>2015-03-17T23:52:11+09:00</updated>
    <id>http://blog.shiroyama.us/blog/2015/03/17/paredit-vim</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/vim-scripts/paredit.vim" title="paredit.vim">paredit.vim</a> という Vim プラグインを今日はじめて知ったが凄すぎる！<br/>
あまりに人生を変えられる出会いだったのでブログに書かざるを得なかった。</p>

<h4>paredit.vim is 何</h4>

<p>Vimmer が Lisp のS式を書くのが著しく快適になるプラグイン</p>

<p><code>scheme
(define (sum a b c) (+ a b c))
</code></p>

<p>例えばこの関数の仮引数 b のところで D して行末までバッサリ削除しようとすると…</p>

<p><code>scheme
(define (sum a))
</code></p>

<p>なんと括弧の対応を残した上で削除してくれる。奇跡か！</p>

<p>他にも、</p>

<ul>
<li>改行するといい感じにインデントしてくれる</li>
<li>括弧を書くと閉じ括弧を自動挿入してくれる</li>
</ul>


<p>などS式を書きやすいようになっている。</p>

<p>まだこれだけしか調べてないが、これだけで200倍ぐらい書きやすくなった！</p>

<h4>使い方</h4>

<p>```vim
NeoBundle &lsquo;vim-scripts/paredit.vim&rsquo;</p>

<p>:NeoBundleInstall</p>

<p>:help paredit</p>

<p>&ldquo; 必要に応じて
:set filetype=scheme
```</p>

<p>Scheme と Clojure は対応していることを確認済み！</p>

<p>以上、SICP 勉強会のお供にどうぞ。</p>
]]></content>
  </entry>
  
</feed>
